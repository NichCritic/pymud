'''
Created on 2014-02-01

@author: Nich
'''
import unittest
import PyMud.model.account as account
import PyMud.model.base as base
from PyMud.player.avatar import AvatarFactory
from PyMud.objects.component_manager import DBComponentSource, ComponentManager
from PyMud.objects.node_factory import NodeFactoryDB
from PyMud.objects.components import components
from PyMud.room.room_components import components as room_components


class Test(unittest.TestCase):


    def setUp(self):
        self.engine = base.engine('sqlite:///:memory:')
        self.Session = base.create_sessionmaker(self.engine)
        base.Base.metadata.create_all(self.engine)
        
        all_components = {}
        all_components.update(components)
        all_components.update(room_components)
        
        self.component_object = DBComponentSource(all_components)
        self.comp_manager = ComponentManager([self.component_object])
        self.node_factory = NodeFactoryDB(self.comp_manager, self.Session)
        self.avatar_factory = AvatarFactory(self.node_factory, self.comp_manager, data={"starting_room":"temp", "starting_location":"temp", "player_id":"temp"})
        
        self.account_utils = account.AccountUtils(self.Session, self.avatar_factory)


    def tearDown(self):
        base.Base.metadata.drop_all(self.engine)
        pass


    def testCreate(self):
        self.account_utils.make_account("foo", "bar", "foobar@foobar.com")
        
    def testCreateAvatar(self):
        acc = self.account_utils.make_account("test", "test1", "test@test.com")
        self.account_utils.create_new_avatar_for_account(acc.id)
        self.account_utils.create_new_avatar_for_account(acc.id)
        
        session = self.Session()
        session.add(acc)
        
        for assoc in acc.avatars:
            print(assoc.avatar.id)
            
        session.close()
            
    def testGetAvatar(self):
        
        acc = self.account_utils.make_account("test", "test2", "test@test.com")
        
        self.account_utils.create_new_avatar_for_account(acc.id)
        self.account_utils.create_new_avatar_for_account(acc.id)
        
        print(self.account_utils.get_avatars_for_account(acc))
        
            
        
    
        


if __name__ == "__main__":
    #import sys;sys.argv = ['', 'Test.testName']
    unittest.main()